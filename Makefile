# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  ImGui_config = debug
  Engine_config = debug
  UNVE_config = debug

else ifeq ($(config),release)
  ImGui_config = release
  Engine_config = release
  UNVE_config = release

else ifeq ($(config),dist)
  ImGui_config = dist
  Engine_config = dist
  UNVE_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ImGui Engine UNVE

.PHONY: all clean help $(PROJECTS) Core Dependencies

all: $(PROJECTS)

Core: Engine

Dependencies: ImGui

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C Dependencies/imgui -f Makefile config=$(ImGui_config)
endif

Engine: ImGui
ifneq (,$(Engine_config))
	@echo "==== Building Engine ($(Engine_config)) ===="
	@${MAKE} --no-print-directory -C Engine -f Makefile config=$(Engine_config)
endif

UNVE: Engine
ifneq (,$(UNVE_config))
	@echo "==== Building UNVE ($(UNVE_config)) ===="
	@${MAKE} --no-print-directory -C UNVE -f Makefile config=$(UNVE_config)
endif

clean:
	@${MAKE} --no-print-directory -C Dependencies/imgui -f Makefile clean
	@${MAKE} --no-print-directory -C Engine -f Makefile clean
	@${MAKE} --no-print-directory -C UNVE -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ImGui"
	@echo "   Engine"
	@echo "   UNVE"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"